{"ast":null,"code":"var _jsxFileName = \"/Users/Gianna/Desktop/Gianna/React/demo2/src/components/Persons/Persons.js\";\nimport React, { Component } from 'react';\nimport Person from './Person/Person'; //有状态组件\n\nclass Persons extends Component {\n  constructor(props) {\n    console.log('[Persons.js] constructor is running...');\n    super(props);\n  }\n\n  componentWillMount() {\n    console.log('[Persons.js] componentWillMount is running...');\n  }\n\n  componentDidMount() {\n    console.log('[Persons.js] componentDidMount is running...');\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log('[Persons.js] componentWillReceiveProps is run...');\n    console.log(nextProps);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('[Persons.js] shouldComponentUpdate is run...');\n    console.log(nextProps, nextState);\n    return nextProps.person !== this.props.person;\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    console.log('[Persons.js] componentWillUpdate is run...');\n    console.log(nextProps, nextState);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('[Persons.js] componentDidUpdate is run...');\n    console.log(prevProps, prevState);\n  }\n\n  render() {\n    console.log('[Persons.js] render is running...');\n    return this.props.persons.map(per => {\n      return React.createElement(Person, {\n        key: per.id,\n        name: per.name,\n        changeValue: event => {\n          this.props.changeValue(event, per.id);\n        },\n        deleteIt: () => {\n          this.props.deleteIt(per.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    });\n  }\n\n}\n\nexport default Persons;","map":{"version":3,"sources":["/Users/Gianna/Desktop/Gianna/React/demo2/src/components/Persons/Persons.js"],"names":["React","Component","Person","Persons","constructor","props","console","log","componentWillMount","componentDidMount","componentWillReceiveProps","nextProps","shouldComponentUpdate","nextState","person","componentWillUpdate","componentDidUpdate","prevProps","prevState","render","persons","map","per","id","name","event","changeValue","deleteIt"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,iBAAnB,C,CAEA;;AACA,MAAMC,OAAN,SAAsBF,SAAtB,CAA+B;AAC3BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACA,UAAMF,KAAN;AACD;;AACHG,EAAAA,kBAAkB,GAAE;AAChBF,IAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;AACH;;AACDE,EAAAA,iBAAiB,GAAE;AACfH,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACH;;AACDG,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAChCL,IAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ;AACH;;AACDC,EAAAA,qBAAqB,CAACD,SAAD,EAAWE,SAAX,EAAqB;AACtCP,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ,EAAsBE,SAAtB;AACA,WAAOF,SAAS,CAACG,MAAV,KAAmB,KAAKT,KAAL,CAAWS,MAArC;AACH;;AACDC,EAAAA,mBAAmB,CAACJ,SAAD,EAAWE,SAAX,EAAqB;AACpCP,IAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ,EAAsBE,SAAtB;AACH;;AACDG,EAAAA,kBAAkB,CAACC,SAAD,EAAWC,SAAX,EAAqB;AACnCZ,IAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYU,SAAZ,EAAsBC,SAAtB;AACH;;AACDC,EAAAA,MAAM,GAAE;AACJb,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACA,WAAO,KAAKF,KAAL,CAAWe,OAAX,CAAmBC,GAAnB,CAAwBC,GAAD,IAAO;AACjC,aAAO,oBAAC,MAAD;AACH,QAAA,GAAG,EAAIA,GAAG,CAACC,EADR;AAEH,QAAA,IAAI,EAAID,GAAG,CAACE,IAFT;AAGH,QAAA,WAAW,EAAKC,KAAD,IAAS;AAAC,eAAKpB,KAAL,CAAWqB,WAAX,CAAuBD,KAAvB,EAA6BH,GAAG,CAACC,EAAjC;AAAqC,SAH3D;AAIH,QAAA,QAAQ,EAAI,MAAI;AAAC,eAAKlB,KAAL,CAAWsB,QAAX,CAAoBL,GAAG,CAACC,EAAxB;AAA4B,SAJ1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAMH,KAPM,CAAP;AAQH;;AAtC0B;;AAwC/B,eAAepB,OAAf","sourcesContent":["import React , { Component }from 'react'\nimport Person from './Person/Person'\n\n//有状态组件\nclass Persons extends Component{\n    constructor(props){\n        console.log('[Persons.js] constructor is running...')\n        super(props);\n      }\n    componentWillMount(){\n        console.log('[Persons.js] componentWillMount is running...')\n    }\n    componentDidMount(){\n        console.log('[Persons.js] componentDidMount is running...')\n    }\n    componentWillReceiveProps(nextProps){\n        console.log('[Persons.js] componentWillReceiveProps is run...');\n        console.log(nextProps)\n    }\n    shouldComponentUpdate(nextProps,nextState){\n        console.log('[Persons.js] shouldComponentUpdate is run...');\n        console.log(nextProps,nextState)\n        return nextProps.person!==this.props.person;\n    }\n    componentWillUpdate(nextProps,nextState){\n        console.log('[Persons.js] componentWillUpdate is run...');\n        console.log(nextProps,nextState)\n    }\n    componentDidUpdate(prevProps,prevState){\n        console.log('[Persons.js] componentDidUpdate is run...');\n        console.log(prevProps,prevState)\n    }\n    render(){\n        console.log('[Persons.js] render is running...')\n        return this.props.persons.map((per)=>{\n            return <Person\n                key = {per.id}\n                name = {per.name}\n                changeValue = {(event)=>{this.props.changeValue(event,per.id)}}\n                deleteIt = {()=>{this.props.deleteIt(per.id)}}\n            />\n        })\n    }\n}\nexport default Persons"]},"metadata":{},"sourceType":"module"}