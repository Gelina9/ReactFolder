{"ast":null,"code":"import { FETCH_POSTS, NEW_POST } from './type'; //获取posts数据\n\nexport const fetchPosts = () => dispatch => {\n  fetch(\"http://jsonplaceholder.typicode.com/posts\").then(res => res.json()).then(posts => dispatch({\n    type: FETCH_POSTS,\n    payload: posts\n  }));\n}; //提交post数据\n\nexport const sendPost = post => dispatch => {\n  fetch(\"http://jsonplaceholder.typicode.com/posts\", {\n    method: \"POST\",\n    hearders: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(post)\n  }).then(res => res.json()).then(post => dispatch => ({\n    type: NEW_POST,\n    payload: post\n  }));\n};","map":{"version":3,"sources":["/Users/Gianna/Desktop/Gianna/React/demo3/src/actions/postActions.js"],"names":["FETCH_POSTS","NEW_POST","fetchPosts","dispatch","fetch","then","res","json","posts","type","payload","sendPost","post","method","hearders","body","JSON","stringify"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,QAArB,QAAqC,QAArC,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAKC,QAAQ,IAAI;AACvCC,EAAAA,KAAK,CAAC,2CAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,KAAK,IACPL,QAAQ,CAAC;AACLM,IAAAA,IAAI,EAACT,WADA;AAELU,IAAAA,OAAO,EAACF;AAFH,GAAD,CAHZ;AAQH,CATM,C,CAWP;;AACA,OAAO,MAAMG,QAAQ,GAAIC,IAAD,IAAST,QAAQ,IAAI;AACzCC,EAAAA,KAAK,CAAC,2CAAD,EAA6C;AAC9CS,IAAAA,MAAM,EAAC,MADuC;AAE9CC,IAAAA,QAAQ,EAAC;AACL,sBAAe;AADV,KAFqC;AAK9CC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeL,IAAf;AALyC,GAA7C,CAAL,CAOCP,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMO,IAAI,IAAIT,QAAQ,KAAK;AACvBM,IAAAA,IAAI,EAACR,QADkB;AAEvBS,IAAAA,OAAO,EAACE;AAFe,GAAL,CARtB;AAYH,CAbM","sourcesContent":["import { FETCH_POSTS,NEW_POST } from './type'\n\n//获取posts数据\nexport const fetchPosts = ()=> dispatch => {\n    fetch(\"http://jsonplaceholder.typicode.com/posts\")\n    .then(res => res.json())\n    .then(posts => \n        dispatch({\n            type:FETCH_POSTS,\n            payload:posts\n        })\n    )\n}\n\n//提交post数据\nexport const sendPost = (post)=> dispatch => {\n    fetch(\"http://jsonplaceholder.typicode.com/posts\",{\n        method:\"POST\",\n        hearders:{\n            \"content-type\":\"application/json\"\n        },\n        body:JSON.stringify(post)\n    })\n    .then(res => res.json())\n    .then(post => dispatch => ({\n        type:NEW_POST,\n        payload:post\n    }))\n}"]},"metadata":{},"sourceType":"module"}